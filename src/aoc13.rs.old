use std::{
    error::Error,
    fs::File,
    io::{self, BufRead, BufReader},
    path::PathBuf,
};

fn main() -> Result<(), Box<dyn Error>> {
    let mut path = PathBuf::from(env!("CARGO_MANIFEST_DIR"));
    path.push("src/aoc11.dat");
    let file = File::open(path)?;
    let reader = BufReader::new(file);
    let lines = reader.lines().collect::<Result<Vec<String>, io::Error>>()?;

    let time = 939;
    let times: Vec<_> = "7,13,x,x,59,x,31,19"
        .split(",")
        .filter_map(|s| s.parse().ok())
        .map(|n: usize| time % n)
        .collect();

    println!("time: {}, times: {:?}", time, times);
    Ok(())
}

#[cfg(test)]
mod tests {
    #[test]
    fn test() {}
}
